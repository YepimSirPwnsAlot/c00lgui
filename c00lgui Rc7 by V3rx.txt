-- Highlighter Setup
local highlighter = {}
local keywords = {
	lua = {
		"and", "break", "or", "else", "elseif", "if", "then", "until", "repeat", "while", "do", "for", "in", "end",
		"local", "return", "function", "export"
	},
	rbx = {
		"game", "workspace", "script", "math", "string", "table", "task", "wait", "select", "next", "Enum",
		"error", "warn", "tick", "assert", "shared", "loadstring", "tonumber", "tostring", "type",
		"typeof", "unpack", "print", "Instance", "CFrame", "Vector3", "Vector2", "Color3", "UDim", "UDim2", "Ray", "BrickColor",
		"OverlapParams", "RaycastParams", "Axes", "Random", "Region3", "Rect", "TweenInfo",
		"collectgarbage", "not", "utf8", "pcall", "xpcall", "_G", "setmetatable", "getmetatable", "os", "pairs", "ipairs"
	},
	operators = {
		"#", "+", "-", "*", "%", "/", "^", "=", "~", "=", "<", ">", ",", ".", "(", ")", "{", "}", "[", "]", ";", ":"
	}
}

local colors = {
	numbers = Color3.fromRGB(255, 198, 0),
	boolean = Color3.fromRGB(214, 128, 23),
	operator = Color3.fromRGB(232, 210, 40),
	lua = Color3.fromRGB(160, 87, 248),
	rbx = Color3.fromRGB(146, 180, 253),
	str = Color3.fromRGB(56, 241, 87),
	comment = Color3.fromRGB(103, 110, 149),
	null = Color3.fromRGB(79, 79, 79),
	call = Color3.fromRGB(130, 170, 255),
	self_call = Color3.fromRGB(227, 201, 141),
	local_color = Color3.fromRGB(199, 146, 234),
	function_color = Color3.fromRGB(241, 122, 124),
	self_color = Color3.fromRGB(146, 134, 234),
	local_property = Color3.fromRGB(129, 222, 255),
}

local function createKeywordSet(keywords)
	local keywordSet = {}
	for _, keyword in ipairs(keywords) do
		keywordSet[keyword] = true
	end
	return keywordSet
end

local luaSet = createKeywordSet(keywords.lua)
local rbxSet = createKeywordSet(keywords.rbx)
local operatorsSet = createKeywordSet(keywords.operators)

local function getHighlight(tokens, index)
	local token = tokens[index]

	if colors[token .. "_color"] then
		return colors[token .. "_color"]
	end

	if tonumber(token) then
		return colors.numbers
	elseif token == "nil" then
		return colors.null
	elseif token:sub(1, 2) == "--" then
		return colors.comment
	elseif operatorsSet[token] then
		return colors.operator
	elseif luaSet[token] then
		return colors.rbx
	elseif rbxSet[token] then
		return colors.lua
	elseif token:sub(1, 1) == "\"" or token:sub(1, 1) == "\'" then
		return colors.str
	elseif token == "true" or token == "false" then
		return colors.boolean
	end

	if tokens[index + 1] == "(" then
		if tokens[index - 1] == ":" then
			return colors.self_call
		end

		return colors.call
	end

	if tokens[index - 1] == "." then
		if tokens[index - 2] == "Enum" then
			return colors.rbx
		end

		return colors.local_property
	end
end

function highlighter.run(source)
	local tokens = {}
	local currentToken = ""
	
	local inString = false
	local inComment = false
	local commentPersist = false
	
	for i = 1, #source do
		local character = source:sub(i, i)
		
		if inComment then
			if character == "\n" and not commentPersist then
				table.insert(tokens, currentToken)
				table.insert(tokens, character)
				currentToken = ""
				
				inComment = false
			elseif source:sub(i - 1, i) == "]]" and commentPersist then
				currentToken ..= "]"
				
				table.insert(tokens, currentToken)
				currentToken = ""
				
				inComment = false
				commentPersist = false
			else
				currentToken = currentToken .. character
			end
		elseif inString then
			if character == inString and source:sub(i-1, i-1) ~= "\\" or character == "\n" then
				currentToken = currentToken .. character
				inString = false
			else
				currentToken = currentToken .. character
			end
		else
			if source:sub(i, i + 1) == "--" then
				table.insert(tokens, currentToken)
				currentToken = "-"
				inComment = true
				commentPersist = source:sub(i + 2, i + 3) == "[["
			elseif character == "\"" or character == "\'" then
				table.insert(tokens, currentToken)
				currentToken = character
				inString = character
			elseif operatorsSet[character] then
				table.insert(tokens, currentToken)
				table.insert(tokens, character)
				currentToken = ""
			elseif character:match("[%w_]") then
				currentToken = currentToken .. character
			else
				table.insert(tokens, currentToken)
				table.insert(tokens, character)
				currentToken = ""
			end
		end
	end
	
	table.insert(tokens, currentToken)

	local highlighted = {}
	
	for i, token in ipairs(tokens) do
		local highlight = getHighlight(tokens, i)

		if highlight then
			local syntax = string.format("<font color = \"#%s\">%s</font>", highlight:ToHex(), token:gsub("<", "&lt;"):gsub(">", "&gt;"))
			table.insert(highlighted, syntax)
		else
			table.insert(highlighted, token)
		end
	end

	return table.concat(highlighted)
end

-- GUI Setup
local gui = Instance.new("ScreenGui")
gui.Name = "StigmaV3"
gui.ResetOnSpawn = false
gui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Name = "MainFrame"
frame.Size = UDim2.new(0, 450, 0, 300)
frame.Position = UDim2.new(0.5, -225, 0.5, -150)
frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
frame.BorderSizePixel = 1
frame.BorderColor3 = Color3.fromRGB(200, 200, 200)
frame.Active = true
frame.Parent = gui

local title = Instance.new("TextLabel")
title.Name = "Title"
title.Parent = frame
title.Size = UDim2.new(1, 0, 0, 20)
title.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
title.BorderSizePixel = 0
title.Text = "  Stigma V3"
title.Font = Enum.Font.SourceSans
title.TextColor3 = Color3.fromRGB(63, 63, 63)
title.TextSize = 14
title.TextXAlignment = Enum.TextXAlignment.Left

local menubar = Instance.new("Frame")
menubar.Name = "Menubar"
menubar.Parent = frame
menubar.Position = UDim2.new(0, 0, 0, 20)
menubar.Size = UDim2.new(1, 0, 0, 18)
menubar.BackgroundColor3 = Color3.fromRGB(245, 245, 245)
menubar.BorderSizePixel = 0

local fileButton = Instance.new("TextButton")
fileButton.Name = "FileButton"
fileButton.Parent = menubar
fileButton.Size = UDim2.new(0, 40, 1, 0)
fileButton.Position = UDim2.new(0, 5, 0, 0)
fileButton.BackgroundTransparency = 1
fileButton.Text = "File"
fileButton.Font = Enum.Font.SourceSans
fileButton.TextColor3 = Color3.fromRGB(0, 0, 0)
fileButton.TextSize = 13
fileButton.TextXAlignment = Enum.TextXAlignment.Left

local helpButton = fileButton:Clone()
helpButton.Text = "Help"
helpButton.Position = UDim2.new(0, 50, 0, 0)
helpButton.Parent = menubar

local fileframe = Instance.new("Frame")
fileframe.Name = "FileMenu"
fileframe.Parent = frame
fileframe.Position = UDim2.new(0, 0, 0, 38)
fileframe.Size = UDim2.new(0, 130, 0, 36)
fileframe.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
fileframe.BorderColor3 = Color3.fromRGB(170, 170, 170)
fileframe.Visible = false

fileButton.MouseButton1Click:Connect(function()
	fileframe.Visible = not fileframe.Visible
end)

local minimize = Instance.new("TextButton")
minimize.Parent = fileframe
minimize.Size = UDim2.new(1, 0, 0.5, 0)
minimize.Position = UDim2.new(0, 0, 0, 0)
minimize.BackgroundTransparency = 1
minimize.Text = "Minimize"
minimize.TextXAlignment = Enum.TextXAlignment.Left
minimize.Font = Enum.Font.SourceSans
minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
minimize.TextSize = 14

local exit = minimize:Clone()
exit.Text = "Exit"
exit.Position = UDim2.new(0, 0, 0.5, 0)
exit.Parent = fileframe
exit.MouseButton1Down:Connect(function()
	gui:Destroy()
end)

local minimized = Instance.new("TextButton")
minimized.Text = "Open Stigma v3"
minimized.Size = UDim2.new(0, 120, 0, 30)
minimized.Position = UDim2.new(0, 10, 1, -40)
minimized.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
minimized.TextColor3 = Color3.fromRGB(0, 0, 0)
minimized.Visible = false
minimized.Parent = gui

local textbox = Instance.new("TextBox")
textbox.Parent = frame
textbox.Position = UDim2.new(0, 5, 0, 58)
textbox.Size = UDim2.new(0, 370, 0, 235)
textbox.BackgroundColor3 = Color3.fromRGB(245, 245, 245)
textbox.BorderColor3 = Color3.fromRGB(180, 180, 180)
textbox.TextColor3 = Color3.fromRGB(0, 0, 0)
textbox.Font = Enum.Font.Arcade
textbox.TextSize = 15
textbox.TextXAlignment = Enum.TextXAlignment.Left
textbox.TextYAlignment = Enum.TextYAlignment.Top
textbox.ClearTextOnFocus = false
textbox.TextWrapped = true
textbox.MultiLine = true
textbox.Text = ""
textbox.RichText = true

textbox:GetPropertyChangedSignal("Text"):Connect(function()
	local source = textbox.Text
	textbox.Text = highlighter.run(source)
end)

local execute = Instance.new("TextButton")
execute.Parent = frame
execute.Size = UDim2.new(0, 65, 0, 115)
execute.Position = UDim2.new(0, 380, 0, 58)
execute.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
execute.BorderColor3 = Color3.fromRGB(180, 180, 180)
execute.Font = Enum.Font.Arcade
execute.Text = "EXE"
execute.TextSize = 16
execute.TextColor3 = Color3.fromRGB(0, 0, 0)
execute.MouseButton1Click:Connect(function()
	if textbox.Text ~= "" then
		local success, err = pcall(function()
			loadstring(textbox.Text)()
		end)
		if not success then
			warn("Error: " .. err)
		end
	end
end)

local clear = Instance.new("TextButton")
clear.Parent = frame
clear.Size = UDim2.new(0, 65, 0, 115)
clear.Position = UDim2.new(0, 380, 0, 178)
clear.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
clear.BorderColor3 = Color3.fromRGB(180, 180, 180)
clear.Font = Enum.Font.Arcade
clear.Text = "CLEAR"
clear.TextSize = 16
clear.TextColor3 = Color3.fromRGB(0, 0, 0)
clear.MouseButton1Click:Connect(function()
	textbox.Text = ""
end)

-- Dragging
local UIS = game:GetService("UserInputService")
local dragging, dragInput, dragStart, startPos

title.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

title.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)

UIS.InputChanged:Connect(function(input)
	if dragging and input == dragInput then
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(
			startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y
		)
	end
end)
